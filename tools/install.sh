#!/bin/bash

source .env

# Função para exibir uma mensagem de erro e sair do script
exit_with_error() {
    echo "Erro: $1"
    exit 1
}

# Verifica se o script está sendo executado como root
if [[ $EUID -ne 0 ]]; then
    exit_with_error "Este script deve ser executado como root."
fi

# Instalação do Python e dependências
sudo apt install -y python3 python3-pip python3-venv git

# Função para criar a venv
create_venv() {
    # Verificar se a venv já existe
    if [ ! -d "$VENV_DIR/$VENV_NAME" ]; then
        echo "Criando a Virtual Environment..."
        $PYTHON_EXECUTABLE -m venv "$VENV_DIR/$VENV_NAME"
    fi
}

# Função para ativar o ambiente virtual e iniciar as aplicações
activate_venv_and_start_app() {
    # Ativação do ambiente virtual
    source "$VENV_DIR/$VENV_NAME/Scripts/activate"
    echo "Ambiente virtual ativado."

    # Execute outras ações relacionadas ao ambiente virtual aqui, se necessário
}

# Criar a venv
create_venv
# Ativar o ambiente virtual e iniciar as aplicações
activate_venv_and_start_app

# Função para criar o arquivo requirements.txt específico para o sistema operacional
create_requirements_file() {
    local $OS_NAME
    local new_requirements_file="requirements-$OS_NAME.txt"

    if [ ! -f "$CAMINHO/tools/$new_requirements_file" ]; then
        # Cria o novo arquivo requirements_os.txt
        sudo $PYTHON_EXECUTABLE "$ACTUALL/create_requirements.py" "requirements.txt" "$new_requirements_file"
        echo "Novo arquivo $new_requirements_file criado com os pacotes compatíveis para o sistema operacional $OS_NAME."
    else
        echo "O arquivo $new_requirements_file já existe."
    fi
}

# Verificação da pasta de instalação e ambiente virtual
if [ ! -d "$CAMINHO" ]; then
    sudo mkdir $CAMINHO
    cd "$CAMINHO" || exit_with_error "Falha ao entrar no diretório do repositório clonado."
else
    cd "$CAMINHO"
    echo "O diretório de instalação $CAMINHO já existe."
fi

if [ ! -d "$CAMINHO" ]; then
    $PYTHON_EXECUTABLE -m venv "$CAMINHO/$VENV_NAME"
    source $VENV_NAME/bin/activate
else
    source $VENV_NAME/bin/activate
    echo "O diretório de ambiente virtual $CAMINHO já existe."
fi

# Verifica se o sistema operacional é diferente de Windows (OSTYPE != cygwin)
if [ "$OS_NAME" != "cygwin" ]; then
    # Chama a função para criar o arquivo requirements.txt específico para o sistema operacional
    create_requirements_file
fi

# Instalação das dependências do requirements.txt (opcional)
if [ -f "$CAMINHO/requirements-$OS_NAME.txt" ]; then
    sudo apt install portaudio19-dev -y
    sudo apt-get install scrot -y
    sudo pip install -r "$ACTUALL/requirements-$OS_NAME.txt" || exit_with_error "Falha ao instalar as dependências."
    sudo apt update
else
    echo "O arquivo requirements-$OS_NAME.txt não foi encontrado."
fi