version: "3.8"
services:
    
  redis:
    build:
      context: .
      dockerfile: ./Dockerfile
    env_file:
      - .env
    image: redis:latest
    container_name: redis
    restart: always
    expose:
      - 6380
    ports:
      - "6380:6380"
    command: redis-server --port 6380 --requirepass ${REDIS_PASSWORD} --
    volumes:
      - $PWD/redis.conf:/redis.conf
    environment:
      - REDIS_REPLICATION_MODE=master
      - REDIS_URL=redis://redis:6380/0
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=6380
    networks:
      backend:
        ipv4_address: 172.18.0.10

  celery:
    build:
      context: .
      dockerfile: ./Dockerfile
    env_file:
      - .env
    container_name: celery
    restart: always
    command: celery -A app.src.tasks worker --loglevel=info
    environment:
      - BROKER_URL=redis://:${REDIS_PASSWORD}@172.18.0.10:6380/0
      - RESULT_BACKEND=redis://:${REDIS_PASSWORD}@172.18.0.10:6380/0
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    depends_on:
      - redis
    networks:
      backend:
        ipv4_address: 172.18.0.30
    links:
      - redis

  app:
    build:
      context: .
      dockerfile: ./Dockerfile
    env_file:
      - .env
    container_name: app
    restart: always
    ports:
      - "8000:8000"
    command: |
      python3 ./start.sh
      #volumes:
      #- ./modules/db/database.db:/modules/db/database.db
    environment:
      - APP=/modules/play.py
        #- SQLITE_DB_PATH=${SQLITE_DB_PATH}
    depends_on:
      - redis
    networks:
      backend:
        ipv4_address: 172.18.0.20
    links:
      - redis

  mongo:
    build:
      context: .
      dockerfile: ./Dockerfile
    env_file:
      - .env
    container_name: mongo
    restart: always
    depends_on:
      - redis
    networks:
      backend:
        ipv4_address: 172.18.0.60
    links:
      - redis
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db

volumes:
  redis:
  celery:
  mongo:
  app:

networks:
  backend:
    name: backend
    driver: bridge
    external: false
    ipam:
      driver: default
      config:
        - subnet: 172.18.0.0/16
