#!/bin/bash

sudo apt update

# Caminhos para os diretórios dos scripts (detecta a pasta local automaticamente)
caminho_script1="$PWD/install.sh"
caminho_script2="$PWD/play.py"

# Caminhos para os arquivos de log (detecta a pasta local automaticamente)
caminho_log_script1="$PWD/chrome.log"
caminho_log_script2="$PWD/play.log"

# Detectar o sistema operacional
sistema_operacional="$(uname -s)"
case "$sistema_operacional" in
    Linux*)
        # Detectar o nome de usuário no Linux
        nome_usuario="$USER"

        if command -v dmidecode &> /dev/null; then
            modelo_chromebook="$(dmidecode -s system-product-name 2>/dev/null | grep Chromebook)"
            if [[ -n "$modelo_chromebook" ]]; then
                caminho_script1="$PWD/chromebook.sh"
            else
                caminho_script1="$PWD/linux.sh"
            fi
        else
            caminho_script1="$PWD/linux.sh"
        fi
        caminho_script2="$PWD/play.py"

        # Adicionar os comandos no cron
        (crontab -l -u "$nome_usuario" ; echo "@reboot $caminho_script1 > $caminho_log_script1 2>&1") | crontab - -u "$nome_usuario"

        # Adicionar atalho no diretório /etc/profile.d/ para iniciar no início da sessão do usuário
        atalho_perfil="/etc/profile.d/autostart.sh"
        echo "#!/bin/bash" > "$atalho_perfil"
        echo "$caminho_script1 > $caminho_log_script1 2>&1" >> "$atalho_perfil"
        chmod +x "$atalho_perfil"
        ;;
    Darwin*)
        # Detectar o nome de usuário no macOS
        nome_usuario="$USER"

        caminho_script1="$PWD/macos.sh"
        caminho_script2="$PWD/play.py"

        # Configuração específica do macOS, caso necessário (adicionar ao LaunchAgents)
        plist_file="$HOME/Library/LaunchAgents/com.example.autostart.plist"
        echo '<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>Label</key>
    <string>com.example.autostart</string>
    <key>ProgramArguments</key>
    <array>
        <string>'"$caminho_script1"'</string>
    </array>
    <key>RunAtLoad</key>
    <true/>
</dict>
</plist>' > "$plist_file"
        chown "$nome_usuario":staff "$plist_file"
        chmod 644 "$plist_file"
        launchctl load "$plist_file"
        ;;
    CYGWIN* | MINGW* | MSYS*)
        # Detectar o nome de usuário no Windows
        nome_usuario="$USERNAME"

        caminho_script1="$PWD/windows.bat"
        caminho_script2="$PWD/play.py"

        # Configuração específica do Windows, caso necessário (adicionar ao Registro do Windows)
        reg_file="$PWD/script_autostart.reg"
        echo 'Windows Registry Editor Version 5.00

[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run]
"Script Autostart"="'"$caminho_script1"'"' > "$reg_file"
        regedit.exe /S "$reg_file"
        rm "$reg_file"
        ;;
    *)
        if command -v crosh &> /dev/null; then
            # Configurar autostart no Chromebook (Chrome OS) usando o diretório /etc/init.d/
            echo "Configurando autostart no Chromebook (Chrome OS)..."
            atalho_autostart="/etc/init.d/autostart.sh"
            echo "#!/bin/bash" > "$atalho_autostart"
            echo "$caminho_script1 > $caminho_log_script1 2>&1" >> "$atalho_autostart"
            chmod +x "$atalho_autostart"
            sudo ln -s "$atalho_autostart" "/etc/rc3.d/S99autostart"
            sudo ln -s "$atalho_autostart" "/etc/rc5.d/S99autostart"

            # Segunda alternativa: Adicionar atalho no diretório /etc/profile.d/ para iniciar no início da sessão do usuário
            atalho_perfil="/etc/profile.d/autostart.sh"
            echo "#!/bin/bash" > "$atalho_perfil"
            echo "$caminho_script1 > $caminho_log_script1 2>&1" >> "$atalho_perfil"
            chmod +x "$atalho_perfil"
        else
            echo "Sistema operacional não suportado."
            exit 1
        fi
        ;;
esac

# Dar permissões de execução para os scripts
chmod +x "$caminho_script1"
chmod +x "$caminho_script2"

# Mensagem de conclusão
echo "Configuração de inicialização automática concluída!"