import os
import sys

current_dir = os.path.dirname(os.path.abspath(__file__))
parent_dir = os.path.dirname(current_dir)
sys.path.append(parent_dir)
# Certifique-se de que o diretório do projeto esteja no sys.path
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

import time
import threading
from modules.database import collection_apps, collection_event, collection_files, collection_event, today, hour
import subprocess
import json

# Função para monitorar o sistema em tempo real
def logs():
    while True:
        try:
            # Usando subprocess para chamar o journalctl e capturar os logs em formato JSON
            proc = subprocess.Popen(["journalctl", "-f", "-o", "json"], stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True, bufsize=1, close_fds=True)

            while True:
                output = proc.stdout.readline().strip()
                if output:
                    # Analisar o log do sistema em formato JSON
                    log_data = parse_journalctl_log(output)
                    if log_data:
                        # Salvar as informações no banco de dados MongoDB
                        save_to_mongodb(collection_files, log_data)

                time.sleep(1)
        except KeyboardInterrupt:
            # Lidar com a interrupção do teclado (Ctrl+C)
            proc.terminate()
            break

# Função para analisar logs do journalctl em formato JSON
def parse_journalctl_log(log_json):
    try:
        log_data = json.loads(log_json)
        return log_data
    except json.JSONDecodeError:
        return None

# Função para salvar informações no banco de dados MongoDB
def save_to_mongodb(collection_files, log_data):
    collection_files.insert_one(log_data)

if __name__ == "__main__":
    # Iniciar uma thread para monitorar o sistema em tempo real
    system_monitoring_thread = threading.Thread(target=logs)

    # Iniciar a thread
    system_monitoring_thread.start()

    # Aguardar até que a thread termine (ou seja, nunca, pois ela é executada em loop)
    system_monitoring_thread.join()