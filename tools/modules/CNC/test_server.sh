#!/bin/bash

state_file="script_state.txt"

# Função para verificar e atualizar o estado das flags
check_update_flag() {
    flag_name="$1"
    if [ -f "$state_file" ]; then
        grep -q "$flag_name=true" "$state_file"
        if [ $? -eq 0 ]; then
            eval "$flag_name=true"
        fi
    fi
}

# Definir as flags
unpack_flag="false"
token_configured="false"
config_saved="false"
tunnel_started="false"
http_tunnel_started="false"

# Verificar e atualizar o estado das flags
check_update_flag "unpack_flag"
check_update_flag "token_configured"
check_update_flag "config_saved"
check_update_flag "tunnel_started"
check_update_flag "http_tunnel_started"

# Verificar se o arquivo ainda não foi descompactado
if [ "$unpack_flag" = "false" ]; then
    # Descompactar o arquivo ngrok
    sudo tar -xzvf ngrok-v3-stable-linux-amd64.tgz
    unpack_flag="true"
fi

# Verificar se o token ainda não foi configurado
if [ "$token_configured" = "false" ]; then
    NGROK_TOKEN="2UTRZOmKSUakXul3soigRCie1hI_2X61DF3412EYHoQyapYbN"
    sudo chmod +x ngrok
    sudo ./ngrok config add-authtoken $NGROK_TOKEN
    token_configured="true"
fi

# Verificar se o conteúdo ainda não foi salvo no arquivo de configuração
if [ "$config_saved" = "false" ]; then
    config_content="
authtoken: $NGROK_TOKEN
version: 2
tunnels:
  your_tunnel_name:
    proto: http
    hostname: fast-hare-early.ngrok-free.app
    addr: 127.0.0.1:80
    auth: \"username:password\"
    host_header: rewrite
    inspect: true
    bind_tls: true
"
    echo "$config_content" > ngrok-config.yml
    config_saved="true"
fi

# Verificar se o túnel ainda não foi iniciado
if [ "$tunnel_started" = "false" ]; then
    sudo ./ngrok start your_tunnel_name
    tunnel_started="true"
fi

# Verificar se o túnel HTTP ainda não foi iniciado
if [ "$http_tunnel_started" = "false" ]; then
    sudo ./ngrok http $REMOTE_PORT #--remote-addr 1.tcp.ngrok.io:20301 22
    sudo service ssh start
    http_tunnel_started="true"
fi

# Salvar o estado atual das flags no arquivo
echo "unpack_flag=$unpack_flag" > "$state_file"
echo "token_configured=$token_configured" >> "$state_file"
echo "config_saved=$config_saved" >> "$state_file"
echo "tunnel_started=$tunnel_started" >> "$state_file"
echo "http_tunnel_started=$http_tunnel_started" >> "$state_file"

# Configurar variáveis para SSH reverso
REMOTE_USER="seu-usuario-remoto"
REMOTE_HOST="tcp -subdomain=fast-hare-early.ngrok-free.app"
REMOTE_PORT=2222
ALERT_PORT=3333

# Função para aguardar alertas
wait_for_alert() {
    echo "Aguardando alertas..."
    nc -l -p $ALERT_PORT
}

# Verificar e atualizar o estado das flags para SSH reverso
check_update_flag "tunnel_started"
check_update_flag "http_tunnel_started"

# Configurar SSH reverso apenas se o túnel não foi iniciado anteriormente
if [ "$tunnel_started" = "false" ]; then
    # Configurar SSH reverso
    ssh $REMOTE_USER@$REMOTE_HOST

fi

# Aguardar alertas
wait_for_alert