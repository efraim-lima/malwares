#!/bin/bash

# Função para instalar dependências
install_dependencies() {
    echo "Instalando dependências..."
    sudo apt install -y openssh-client
    echo "Dependências instaladas."
}

# Função para gerar chaves SSH, caso não existam
generate_ssh_keys() {
    if [ ! -f ~/.ssh/id_rsa ]; then
        echo "Gerando chaves SSH..."
        ssh-keygen -t rsa -b 4096 -N "" -f ~/.ssh/id_rsa
        echo "Chaves SSH geradas com sucesso."
    else
        echo "As chaves SSH já existem."
    fi
}

# Função para adicionar chave pública ao Chromebook do seu amigo
add_public_key_to_chromebook() {
    read -p "Informe o endereço IP do Chromebook do seu amigo: " chromebook_ip
    read -p "Informe o nome do usuário no Chromebook do seu amigo: " remote_user
    ssh-copy-id -i ~/.ssh/id_rsa.pub $remote_user@$chromebook_ip
    echo "Chave pública adicionada ao Chromebook do seu amigo."
}

# Função para configurar o arquivo /etc/ssh/sshd_config
configure_sshd_config() {
    # Verificar se o arquivo existe
    if [ ! -e /etc/ssh/sshd_config ]; then
        echo "Arquivo /etc/ssh/sshd_config não encontrado."
        exit 1
    fi

    # Verificar se PasswordAuthentication está definido como 'no'
    if grep -q "^PasswordAuthentication no" /etc/ssh/sshd_config; then
        echo "Alterando PasswordAuthentication para 'yes' em /etc/ssh/sshd_config..."
        sudo sed -i 's/^PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
        echo "PasswordAuthentication alterado para 'yes'."
        sudo service ssh reload
        echo "Serviço SSH recarregado."
    else
        echo "PasswordAuthentication já está definido como 'yes' em /etc/ssh/sshd_config."
    fi
}

# Instalar dependências necessárias
install_dependencies

# Gerar chaves SSH, se necessário
generate_ssh_keys

# Adicionar chave pública ao Chromebook do seu amigo
add_public_key_to_chromebook

# Mais uma configuracao
configure_sshd_config

echo "Ambiente configurado no seu Ubuntu."