#!/bin/bash

### SUPER IMPORTANTE!!!

# # Para usar o nome de usuário "joao" e a porta padrão (22)
# sudo ./setup_chromebook.sh joao yes

### SUPER IMPORTANTE!!!

# Função para instalar dependências
install_dependencies() {
    echo "Instalando dependências..."
    sudo apt update
    sudo apt install -y openssh-server
    echo "Dependências instaladas."
}

# Função para verificar se o usuário já existe
check_user_exist() {
    # Verificar se o usuário já existe
    if id "$remote_user" &>/dev/null; then
        echo "Usuário $remote_user já existe. Utilizando usuário existente."
    else
        # Criar novo usuário e adicioná-lo ao grupo sudo
        sudo adduser $remote_user
        sudo usermod -aG sudo $remote_user
        echo "Usuário $remote_user criado e adicionado ao grupo sudo."
        sudo passwd $remote_user
    fi
}

# Função para gerar chaves SSH, caso não existam
generate_ssh_keys() {
    if [ ! -f ~/.ssh/id_rsa ]; then
        echo "Gerando chaves SSH..."
        ssh-keygen -t rsa -b 4096 -N "" -f ~/.ssh/id_rsa
        echo "Chaves SSH geradas com sucesso."
    else
        echo "As chaves SSH já existem."
    fi
}

# Função para configurar a porta SSH
configure_ssh_port() {
    # Verificar se a porta SSH está configurada no arquivo sshd_config
    if grep -q "^Port" /etc/ssh/sshd_config; then
        current_port=$(grep "^Port" /etc/ssh/sshd_config | awk '{print $2}')
        if [ "$current_port" -eq 22 ] && [ "$use_default_port" == "yes" ]; then
            echo "Mantendo a porta SSH existente: $current_port."
        else
            read -p "A porta SSH já está configurada como $current_port. Deseja mantê-la? (y/n): " keep_port
            if [ "$keep_port" == "n" ]; then
                read -p "Informe a nova porta SSH que deseja usar: " ssh_port
                # Validar a porta informada
                while ! [[ "$ssh_port" =~ ^[0-9]+$ ]] || [ "$ssh_port" -lt 1 ] || [ "$ssh_port" -gt 65535 ]; do
                    read -p "Porta inválida. Informe uma porta válida: " ssh_port
                done
                # Configurar a nova porta SSH
                sudo sed -i "s/^Port.*/Port $ssh_port/" /etc/ssh/sshd_config
                sudo systemctl restart sshd
                echo "Porta SSH configurada para $ssh_port."
            else
                echo "Mantendo a porta SSH existente: $current_port."
            fi
        fi
    else
        read -p "Informe a porta SSH que deseja usar (pressione Enter para usar a porta padrão 22): " ssh_port
        if [ -z "$ssh_port" ]; then
            ssh_port=22
        fi
        sudo sed -i "s/^#Port 22/Port $ssh_port/" /etc/ssh/sshd_config
        sudo systemctl restart sshd
        echo "Porta SSH configurada para $ssh_port."
    fi
}

# Função para configurar o arquivo /etc/ssh/sshd_config
configure_sshd_config() {
    # Verificar se o arquivo existe
    if [ ! -e /etc/ssh/sshd_config ]; then
        echo "Arquivo /etc/ssh/sshd_config não encontrado."
        exit 1
    fi

    # Verificar se PasswordAuthentication está definido como 'no'
    if grep -q "^PasswordAuthentication no" /etc/ssh/sshd_config; then
        echo "Alterando PasswordAuthentication para 'yes' em /etc/ssh/sshd_config..."
        sudo sed -i 's/^PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
        echo "PasswordAuthentication alterado para 'yes'."
        sudo service ssh reload
        echo "Serviço SSH recarregado."
    else
        echo "PasswordAuthentication já está definido como 'yes' em /etc/ssh/sshd_config."
    fi
}

# Verificar argumentos de linha de comando
if [ $# -gt 0 ]; then
    remote_user="$1"
    use_default_port="$2"
else
    read -p "Informe o nome do usuário para acesso remoto via SSH: " remote_user
    read -p "Deseja utilizar a porta SSH padrão 22? (y/n): " use_default_port
fi

# Instalar dependências necessárias
install_dependencies

# Verificar se o usuário já existe
check_user_exist

# Gerar chaves SSH, se necessário
generate_ssh_keys

# Configurar a porta SSH
configure_ssh_port

# Configurar o arquivo /etc/ssh/sshd_config
configure_sshd_config

echo "Ambiente configurado no Chromebook do seu amigo."