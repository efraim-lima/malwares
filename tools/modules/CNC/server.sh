#!/bin/bash

install_openvpn() {
    # Instalação do OpenVPN
    sudo apt update
    sudo apt install -y openvpn
    sudo apt install -y openssh-client
}

username=$(whoami)
ip_publico=$(curl -s ifconfig.me)

configure_openvpn_server() {
    # Verificar se a configuração do OpenVPN já foi feita
    if [ -f ~/openvpn_server.conf ] && [ -f /etc/openvpn/ca.crt ] && [ -f /etc/openvpn/server.crt ] && [ -f /etc/openvpn/server.key ] && [ -f /etc/openvpn/dh.pem ]; then
        echo "Configuração do OpenVPN já foi feita. Pulando a etapa de configuração."
        return
    fi

    # Configuração do OpenVPN
    SEU_IP_PUBLICO=$ip_publico
    PORTA_OPENVPN="1194"
    PROTOCOLO_OPENVPN="udp"

    # Criação do arquivo de configuração do servidor
    cat > ~/openvpn_server.conf <<EOL
local 0.0.0.0
port $PORTA_OPENVPN
proto $PROTOCOLO_OPENVPN
dev tun
ca /etc/openvpn/ca.crt
cert /etc/openvpn/server.crt
key /etc/openvpn/server.key
dh /etc/openvpn/dh.pem
server 10.8.0.0 255.255.255.0
ifconfig-pool-persist ipp.txt
push "redirect-gateway def1 bypass-dhcp"
push "dhcp-option DNS 8.8.8.8"
push "dhcp-option DNS 8.8.4.4"
keepalive 10 120
comp-lzo
persist-key
persist-tun
status openvpn-status.log
verb 3
data-ciphers AES-256-GCM:AES-128-GCM:CHACHA20-POLY1305
EOL

    # Criação do diretório de certificados
    sudo mkdir -p /etc/openvpn/easy-rsa

    # Configuração do ambiente de certificados
    sudo ln -s /usr/share/easy-rsa/* /etc/openvpn/easy-rsa/
    cd /etc/openvpn/easy-rsa

    # Criação dos certificados e chaves
    sudo ./easyrsa init-pki
    sudo ./easyrsa build-ca
    sudo cp /etc/openvpn/easy-rsa/pki/ca.crt /etc/openvpn/  # Adiciona a CA para o diretório correto
    sudo ./easyrsa build-server-full server nopass
    sudo ./easyrsa build-client-full client nopass
    sudo ./easyrsa gen-dh

    # Salvar os certificados no seu computador
    sudo cp /etc/openvpn/easy-rsa/pki/ca.crt /etc/openvpn/
    sudo cp /etc/openvpn/easy-rsa/pki/issued/server.crt /etc/openvpn/
    sudo cp /etc/openvpn/easy-rsa/pki/private/server.key /etc/openvpn/
    sudo cp /etc/openvpn/easy-rsa/pki/dh.pem /etc/openvpn/

    # Pergunta quantos clientes deseja criar
    read -p "Digite o número de clientes que deseja criar: " NUM_CLIENTES

    # Gera os certificados para os clientes
    for ((i = 1; i <= NUM_CLIENTES; i++)); do
        generate_client_certificates "client"
    done

    # Exporta os certificados para o computador do seu amigo
    export_client_certificates "$IP_PUBLICO_AMIGO"
}

generate_client_certificates() {
    CLIENT_NAME=$1
    # Gera uma chave privada RSA para o cliente
    sudo ./easyrsa build-client-full "$CLIENT_NAME" nopass
    sudo cp "/etc/openvpn/easy-rsa/pki/issued/$CLIENT_NAME.crt" "/etc/openvpn/"
    sudo cp "/etc/openvpn/easy-rsa/pki/private/$CLIENT_NAME.key" "/etc/openvpn/"
}

export_client_certificates() {
    IP_PUBLICO_AMIGO=$1
    # Copia os certificados para o computador do amigo
    scp "/etc/openvpn/ca.crt" "/etc/openvpn/client.conf" "/etc/openvpn/$IP_PUBLICO_AMIGO.crt" "/etc/openvpn/$IP_PUBLICO_AMIGO.key" $username@$IP_PUBLICO_AMIGO:/etc/openvpn
}

start_openssh_client() {
    sudo apt install openssh-client

    # Verificar se as chaves SSH já foram criadas e exportadas
    if [ -f ~/.ssh/id_rsa ] && ssh-add -L | grep -q "ssh-rsa"; then
        echo "Chaves SSH já foram criadas e exportadas. Pulando a etapa de criação e exportação das chaves."
    else
        # Perguntar se deseja criar e exportar as chaves SSH
        read -p "Chaves SSH não foram encontradas. Deseja criar e exportá-las agora? (y/n): " CREATE_SSH_KEYS
        if [ "$CREATE_SSH_KEYS" == "y" ]; then
            ssh-keygen -t rsa -b 4096
            ssh-copy-id -p $REMOTE_PORT $REMOTE_USERNAME@$REMOTE_IP
        fi
    fi

    # Pergunta o endereço IP do servidor SSH remoto
    read -p "Digite o endereço IP ou nome de domínio do servidor SSH remoto: " REMOTE_IP

    # Pergunta a porta SSH do servidor remoto (normalmente a porta 22)
    read -p "Digite a porta SSH do servidor remoto (pressione Enter para usar a porta padrão 22): " REMOTE_PORT
    REMOTE_PORT=${REMOTE_PORT:-22}

    # Pergunta o nome de usuário para a conexão SSH
    read -p "Digite o nome de usuário para a conexão SSH: " REMOTE_USERNAME

    # Cria as chaves SSH (caso não existam)
    if [ ! -f ~/.ssh/id_rsa ]; then
        ssh-keygen -t rsa -b 4096
    fi

    # Exporta a chave pública para o servidor remoto (se já não estiver exportada)
    ssh-copy-id -p $REMOTE_PORT $REMOTE_USERNAME@$REMOTE_IP

    # Conecta ao servidor remoto usando SSH
    ssh -p $REMOTE_PORT $REMOTE_USERNAME@$REMOTE_IP
}


start_openvpn_server() {
    # Iniciar o OpenVPN
    sudo openvpn --config ~/openvpn_server.conf
}

main() {
    install_openvpn
    configure_openvpn_server
    start_openssh_client
    start_openvpn_server
}

main